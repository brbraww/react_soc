{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/Dialog/Dialog.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","FormControl","input","meta","touched","error","children","hasError","className","classes","formControl","mainArea","Textarea","props","restProps","child","Input","createField","component","name","placeholder","type","validate","text","requiredField","value","maxLenghtCreator","maxLenght","length","mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","Dialog","dialog","active","id","Message","message","maxLenght20","AddMessageFormRedux","reduxForm","form","onSubmitSuccess","result","dispatch","reset","onSubmit","handleSubmit","Field","Dialogs","DialogsItems","DialogsPage","DialogsData","map","MessagesItems","MessagesData","dialogs","dialog_items","messages","sendMessage","newMessageText","compose","sendMessageCreator"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,+LCGrHC,EAAc,SAAC,GAA6C,EAA5CC,MAA6C,IAAD,IAArCC,KAAMC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAQC,EAAc,EAAdA,SAC1CC,EAAWH,GAAWC,EAC5B,OACI,yBAAKG,UAAWC,IAAQC,aAEpB,yBAAKF,UAAWC,IAAQE,SAAW,KAAMJ,EAAWE,IAAQJ,MAAQ,KAC/DC,GAEL,yBAAKE,UAAWC,IAAQJ,OAClBE,GAAY,8BAAOF,MAMxBO,EAAW,SAACC,GAAW,IACzBX,EAAoCW,EAApCX,MAAuBY,GAAaD,EAA7BV,KAA6BU,EAAvBE,MADW,YACYF,EADZ,2BAE/B,OAAO,kBAACZ,EAAgBY,EACpB,8CAAcX,EAAWY,MAGpBE,EAAQ,SAACH,GAAW,IACtBX,EAAoCW,EAApCX,MAAuBY,GAAaD,EAA7BV,KAA6BU,EAAvBE,MADQ,YACeF,EADf,2BAE5B,OAAO,kBAACZ,EAAgBY,EACpB,2CAAWX,EAAWY,MAIjBG,EAAc,SAACC,EAAUC,EAAMC,EAAaC,EAAMC,GAAmC,IAAzBT,EAAwB,uDAAhB,GAAIU,EAAY,uDAAP,GACtF,OAAO,6BACH,kBAAC,IAAD,eAAOL,UAAWA,EACXC,KAAMA,EACNC,YAAaA,EACbC,KAAMA,EACNC,SAAUA,GACNT,IANR,IAOCU,K,iCCxCZ,oEAAO,IAAMC,EAAgB,SAAAC,GACzB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,uICF9BE,EAA0B,SAACC,GAAD,MAAY,CACtCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKvB,MAAMkB,OAGT,kBAACG,EAAcE,KAAKvB,OAFhB,kBAAC,IAAD,CAAUwB,GAAG,eAJW,GACXC,IAAMJ,WAatC,OAJqCK,YAAQV,EAARU,CAAkCJ,K,oBCjB3EpC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,0B,oBCA3GD,EAAOC,QAAU,CAAC,OAAS,yB,oBCA3BD,EAAOC,QAAU,CAAC,QAAU,2B,gHCabwC,EAVA,SAAC3B,GACZ,OACI,yBAAKL,UAAYC,IAAQgC,OAAS,IAAMhC,IAAQiC,QAC5C,kBAAC,IAAD,CAAUL,GAAI,YAAaxB,EAAM8B,IAC3B9B,EAAMM,Q,kBCGTyB,EARC,SAAC/B,GACb,OACI,yBAAKL,UAAYC,IAAQoC,SACnBhC,EAAMU,O,oDC+BduB,EAAcpB,YAAiB,IAoB/BqB,EAAsBC,YAAU,CAACC,KAAM,uBAAuBC,gBAFhD,SAACC,EAAQC,GAAT,OAChBA,EAASC,YAAM,2BACSL,EAnBL,SAACnC,GACpB,OACI,0BAAMyC,SAAUzC,EAAM0C,cAClB,6BACI,kBAACC,EAAA,EAAD,CACItC,UAAWN,IACXO,KAAM,iBACNC,YAAa,qBACbE,SAAU,CAACE,IAAesB,MAGlC,6BACI,6CASDW,EAjDC,SAAC5C,GACb,IAAI6C,EAAe7C,EAAM8C,YAAYC,YAAYC,KAAK,SAACpB,GAAD,OAAY,kBAAC,EAAD,CAAQtB,KAAOsB,EAAOtB,KAAOwB,GAAIF,EAAOE,QACtGmB,EAAgBjD,EAAM8C,YAAYI,aAAaF,KAAK,SAAChB,GAAD,OAAa,kBAAC,EAAD,CAAStB,KAAOsB,EAAQtB,KAAOoB,GAAIE,EAAQF,QAMhH,OAAK9B,EAAMkB,OAIP,yBAAKvB,UAAYC,IAAQuD,SACrB,yBAAKxD,UAAYC,IAAQwD,cACnBP,GAGN,yBAAKlD,UAAYC,IAAQyD,UACrB,6BACMJ,GAGN,kBAACf,EAAD,CAAqBO,SAlBb,SAAC7B,GACjBZ,EAAMsD,YAAY1C,EAAM2C,qBAIjB,kBAAC,IAAD,CAAU/B,GAAG,Y,yBCCbgC,sBACX9B,aAdkB,SAACT,GACnB,MAAO,CACH6B,YAAa7B,EAAM6B,gBAGF,SAACP,GACtB,MAAO,CACHe,YAAa,SAACC,GACVhB,EAASkB,YAAmBF,SAOpCnC,IAFWoC,CAGbZ","file":"static/js/5.13acf3c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__F7-nC\",\"error\":\"FormsControls_error__37hEA\",\"formSummaryError\":\"FormsControls_formSummaryError__13P5v\"};","import React from \"react\";\r\nimport classes from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta:{touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return(\r\n        <div className={classes.formControl}>\r\n\r\n            <div className={classes.mainArea + ' '+ (hasError ? classes.error : '')}>\r\n                {children}\r\n            </div>\r\n            <div className={classes.error}>\r\n                { hasError && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}>\r\n        <textarea {...input} {...restProps}/>\r\n    </FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}>\r\n        <input {...input} {...restProps}/>\r\n    </FormControl>\r\n}\r\n\r\nexport const createField = (component,name, placeholder, type, validate, props = {}, text='') => {\r\n    return <div>\r\n        <Field component={component}\r\n               name={name}\r\n               placeholder={placeholder}\r\n               type={type}\r\n               validate={validate}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n}","export const requiredField = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLenghtCreator = (maxLenght) => (value) => {\r\n    if (value.length > maxLenght) return `Max lenght is ${maxLenght} symbols`;\r\n    return undefined;\r\n}\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to=\"/login\" />\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect) (RedirectComponent);\r\n\r\n\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3PEZm\",\"dialog_items\":\"Dialogs_dialog_items__3tRtR\",\"active\":\"Dialogs_active__3DEN2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__3bPNE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2S8tT\"};","import classes from \"./Dialog.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst Dialog = (props) => {\r\n    return (\r\n        <div className={ classes.dialog + ' ' + classes.active }>\r\n            <NavLink  to={\"/dialogs/\"+ props.id }>\r\n                { props.name }\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog;","import classes from \"./Message.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={ classes.message }>\r\n            { props.text }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport classes from './Dialogs.module.css';\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm, reset} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLenghtCreator, requiredField} from \"../../utils/validators/validators\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let DialogsItems = props.DialogsPage.DialogsData.map( (dialog) => <Dialog name={ dialog.name } id={dialog.id} /> );\r\n    let MessagesItems = props.DialogsPage.MessagesData.map( (message) => <Message text={ message.text } id={message.id} /> );\r\n\r\n    let addNewMessage = (value) => {\r\n        props.sendMessage(value.newMessageText);\r\n    }\r\n\r\n    if (!props.isAuth) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n    return (\r\n        <div className={ classes.dialogs }>\r\n            <div className={ classes.dialog_items }>\r\n                { DialogsItems }\r\n            </div>\r\n\r\n            <div className={ classes.messages }>\r\n                <div>\r\n                    { MessagesItems }\r\n                </div>\r\n\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst maxLenght20 = maxLenghtCreator(20)\r\nconst AddMessageForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    name={'newMessageText'}\r\n                    placeholder={'Enter your message'}\r\n                    validate={[requiredField, maxLenght20]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('dialogAddMessageForm'));\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm',onSubmitSuccess:afterSubmit})(AddMessageForm)\r\n\r\nexport default Dialogs;","import {sendMessageCreator} from \"../../redux/Dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        DialogsPage: state.DialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageText) => {\r\n            dispatch(sendMessageCreator(newMessageText));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}