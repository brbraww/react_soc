{"version":3,"sources":["components/Nav/Nav.module.css","serviceWorker.js","components/Nav/Nav.js","components/Music/Music.js","components/Settings/Settings.js","components/News/News.js","components/Bookmarks/Bookmarks.js","components/Header/Header.js","components/Header/HeaderContainer.js","redux/app-reducer.js","redux/Sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","redux/auth-reducer.js","components/Header/Header.module.css","redux/Profile-reducer.js","components/common/Preloader/Preloader.js","api/api.js","redux/Dialogs-reducer.js","utils/object-helper.js","redux/Users-reducer.js","components/Music/Music.module.css","components/Settings/Settings.module.css","components/News/News.module.css","components/Bookmarks/Bookmarks.module.css","assets/img/Spinner.svg"],"names":["module","exports","Boolean","window","location","hostname","match","Nav","className","classes","nav","to","activeClassName","active_link","Music","props","dialogs","Settings","News","Bookmarks","Header","header","src","alt","loginBlock","isAuth","login","onClick","logout","HeaderContainer","this","React","Component","compose","connect","state","auth","initialState","initialized","appReducer","action","type","SidebarReducer","reducers","combineReducers","ProfilePage","ProfileReducer","DialogsPage","DialogsReducer","sidebar","UsersPage","UsersReducer","authReducer","form","formReducer","app","store","createStore","applyMiddleware","thunk","withSuspense","Suspense","fallback","Preloader","DialogsContainer","lazy","ProfileContainer","UsersContainer","Login","App","initializeApp","path","render","AppContainer","withRouter","dispatch","promise","authUser","Promise","all","then","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","userId","email","setAuthUserData","data","a","authAPI","authMe","response","resultCode","id","password","rememberMe","messages","length","stopSubmit","_error","ADD_POST","PostsData","text","likesCount","profile","status","addPostActionCreator","newPostText","setStatus","getUserProfile","profileAPI","getProfile","getStatus","updateStatus","NewPost","filter","p","postId","preloader","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","follow","post","unfollow","delete","put","DialogsData","name","MessagesData","chatId","sendMessageCreator","newMessageText","updateObjectsInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UsersData","totalUsersCount","isFetching","isFollowingInProgress","portionSize","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowingInProgress","totalCount","followUnfollowFlow","apiMethod","actionCreator","bind","followed"],"mappings":"0KACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,YAAc,2B,oFCWnCC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,sECcSC,EA5BH,WACR,OACI,yBAAKC,UAAYC,IAAQC,KACrB,6BACI,kBAAC,IAAD,CAASC,GAAG,QAAQC,gBAAkBH,IAAQI,aAA9C,SAEJ,6BACI,kBAAC,IAAD,CAASF,GAAG,WAAWC,gBAAkBH,IAAQI,aAAjD,YAEJ,6BACI,kBAAC,IAAD,CAASF,GAAG,SAASC,gBAAkBH,IAAQI,aAA/C,UAEJ,6BACI,kBAAC,IAAD,CAASF,GAAG,WAAWC,gBAAkBH,IAAQI,aAAjD,YAEJ,6BACI,kBAAC,IAAD,CAASF,GAAG,SAASC,gBAAkBH,IAAQI,aAA/C,UAEJ,6BACI,kBAAC,IAAD,CAASF,GAAG,aAAaC,gBAAkBH,IAAQI,aAAnD,cAEJ,6BACI,kBAAC,IAAD,CAASF,GAAG,YAAYC,gBAAkBH,IAAQI,aAAlD,e,iBCfDC,EARD,SAACC,GACX,OACI,yBAAKP,UAAYC,IAAQO,SAAzB,U,iBCMOC,EARE,SAACF,GACd,OACI,yBAAKP,UAAYC,IAAQO,SAAzB,a,iBCMOE,EARF,SAACH,GACV,OACI,yBAAKP,UAAYC,IAAQO,SAAzB,S,iBCMOG,EARG,SAACJ,GACf,OACI,yBAAKP,UAAYC,IAAQO,SAAzB,c,yBCaOI,EAdA,SAACL,GACZ,OACI,4BAAQP,UAAYC,IAAQY,QACxB,yBAAKC,IAAI,uDAAuDC,IAAI,+CACpE,yBAAKf,UAAWC,IAAQe,YACnBT,EAAMU,OACD,6BAAK,2BAAIV,EAAMW,MAAV,MAAmB,4BAAQC,QAASZ,EAAMa,QAAvB,YACzB,kBAAC,IAAD,CAASjB,GAAI,UAAb,Y,wBCLfkB,E,uKAEE,OAAO,kBAAC,EAAWC,KAAKf,W,GAFFgB,IAAMC,WAUrBC,cACXC,aANoB,SAACC,GAAD,MAAY,CAChCV,OAAQU,EAAMC,KAAKX,OACnBC,MAAOS,EAAMC,KAAKV,SAIO,CAACE,aADfK,CAEbJ,G,OCdEQ,EAAe,CACfC,aAAa,GA4BFC,EAzBI,WAAmC,IAAlCJ,EAAiC,uDAAzBE,EAAcG,EAAW,uCACjD,OAAQA,EAAOC,MACX,IAPoB,0BAQhB,OAAO,eACAN,EADP,CAEIG,aAAa,IAErB,QACI,OAAOH,I,gBChBfE,EAAe,GASJK,EALQ,WAAmC,IAAlCP,EAAiC,uDAAzBE,EAAyB,iCAErD,OAAOF,G,wBCIPQ,EAAWC,YAAgB,CAC3BC,YAAaC,IACbC,YAAaC,IACbC,QAASP,EACTQ,UAAWC,IACXf,KAAMgB,IACNC,KAAMC,IACNC,IAAKhB,IAGLiB,EAAQC,YAAYd,EAAUe,YAAgBC,MAClDxD,OAAOqD,MAAQA,EAEAA,Q,QCpBFI,EAAe,SAAC5B,GACzB,OAAO,SAACjB,GACJ,OAAO,kBAAC,IAAM8C,SAAP,CAAgBC,SAAU,kBAACC,EAAA,EAAD,OAC7B,kBAAC/B,EAAcjB,MCSrBiD,EAAmBjC,IAAMkC,MAAK,kBAAM,uDACpCC,EAAmBnC,IAAMkC,MAAK,kBAAM,uDACpCE,EAAiBpC,IAAMkC,MAAK,kBAAM,iCAClCG,GAAQrC,IAAMkC,MAAK,kBAAM,uDAEzBI,G,kLAEEvC,KAAKf,MAAMuD,kB,+BAOX,OACI,yBAAK9D,UAAU,eACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CAAO+D,KAAK,WAAWC,OAAQZ,EAAaI,KAC5C,kBAAC,IAAD,CAAOO,KAAK,oBAAoBC,OAAQZ,EAAaM,KACrD,kBAAC,IAAD,CAAOK,KAAK,SAASC,OAAQZ,EAAaO,KAC1C,kBAAC,IAAD,CAAOI,KAAK,QAAQC,OAAQ,kBAAM,kBAAC,EAAD,SAClC,kBAAC,IAAD,CAAOD,KAAK,YAAYC,OAAQ,kBAAM,kBAAC,EAAD,SACtC,kBAAC,IAAD,CAAOD,KAAK,aAAaC,OAAQ,kBAAM,kBAAC,EAAD,SACvC,kBAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,kBAAC,EAAD,SACnC,kBAAC,IAAD,CAAOD,KAAK,SAASC,OAAQZ,EAAaQ,Y,GArB5CrC,IAAMC,WAgCpByC,GAAexC,YACfyC,IACAxC,aAPoB,SAACC,GAAD,MAAY,CAChCG,YAAaH,EAAMoB,IAAIjB,eAME,CAACgC,cJ9BD,kBAAM,SAACK,GAChC,IAAIC,EAAUD,EAASE,eAEvBC,QAAQC,IAAI,CAACH,IAAUI,MAAK,WACxBL,EARiC,CACrClC,KAlBwB,mCIiDTR,CAE4BoC,IAYhCY,GATD,SAAClE,GACX,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUyC,MAAOA,GACb,kBAACiB,GAAD,SCtDhBS,IAASV,OAAO,kBAAC,GAAD,MAAaW,SAASC,eAAe,Sb4H/C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBP,MAAK,SAAAQ,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,wLcrIxBxD,EAAe,CACfyD,OAAQ,KACRC,MAAO,KACPrE,MAAO,KACPD,QAAQ,GAeCuE,EAAkB,SAACF,EAAQC,EAAOrE,EAAOD,GAAvB,MAAmC,CAC9DgB,KArBkB,qBAsBlBwD,KAAM,CAACH,SAAQC,QAAOrE,QAAOD,YAGpBoD,EAAW,yDAAM,WAAOF,GAAP,uBAAAuB,EAAA,sEACLC,IAAQC,SADH,OAEO,KAD7BC,EADsB,QAEbJ,KAAKK,aAAmB,EACRD,EAASJ,KAAKA,KAAlCM,EAD2B,EAC3BA,GAAIR,EADuB,EACvBA,MAAOrE,EADgB,EAChBA,MAChBiD,EAASqB,EAAgBO,EAAIR,EAAOrE,GAAO,KAJrB,2CAAN,uDAQXA,EAAQ,SAACqE,EAAOS,EAAUC,GAAlB,8CAAiC,WAAO9B,GAAP,iBAAAuB,EAAA,sEAC7BC,IAAQzE,MAAMqE,EAAOS,EAAUC,GADF,OAEjB,KAD7BJ,EAD8C,QAErCJ,KAAKK,WACd3B,EAASE,MAELgB,EAAUQ,EAASJ,KAAKS,SAASC,OAAS,EAAIN,EAASJ,KAAKS,SAAS,GAAG,aAC5E/B,EAASiC,YAAW,QAAS,CAACC,OAAQhB,MANQ,2CAAjC,uDASRjE,EAAS,yDAAM,WAAO+C,GAAP,SAAAuB,EAAA,sEACHC,IAAQvE,SADL,OAES,IAFT,OAEXqE,KAAKK,YACd3B,EAASqB,EAAgB,KAAM,KAAM,MAAM,IAHvB,2CAAN,uDAQP5C,IA1CK,WAAmC,IAAlCjB,EAAiC,uDAAzBE,EAAcG,EAAW,uCAClD,OAAQA,EAAOC,MACX,IAVc,qBAWV,OAAO,eACAN,EADP,GAEOK,EAAOyD,MAElB,QACI,OAAO9D,K,mBClBnBnC,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,0NCCzD6G,EAAW,mBAKbzE,EAAe,CACf0E,UAAW,CACP,CAACR,GAAI,EAAGS,KAAM,QAASC,WAAY,GACnC,CAACV,GAAI,EAAGS,KAAM,mBAAoBC,WAAY,KAElDC,QAAS,KACTC,OAAQ,IAwCCC,EAAuB,SAACC,GAAD,MAAkB,CAClD5E,KAAMqE,EACNO,gBAMSC,EAAY,SAACH,GAAD,MAAa,CAClC1E,KA1De,qBA2Df0E,WAOSI,EAAiB,SAACzB,GAAD,8CAAY,WAAOnB,GAAP,eAAAuB,EAAA,sEACjBsB,IAAWC,WAAW3B,GADL,OAClCO,EADkC,OAEtC1B,EAfwC,CACxClC,KAvDqB,2BAwDrByE,QAawBb,EAASJ,OAFK,2CAAZ,uDAKjByB,EAAY,SAAC5B,GAAD,8CAAY,WAAOnB,GAAP,eAAAuB,EAAA,sEACZsB,IAAWE,UAAU5B,GADT,OAC7BO,EAD6B,OAEjC1B,EAAS2C,EAAUjB,EAASJ,OAFK,2CAAZ,uDAIZ0B,EAAe,SAACR,GAAD,8CAAa,WAAOxC,GAAP,SAAAuB,EAAA,sEAChBsB,IAAWG,aAAaR,GADR,OAEJ,IAFI,OAExBlB,KAAKK,YACd3B,EAAS2C,EAAUH,IAHc,2CAAb,uDAObrE,IAtEQ,WAAmC,IAAlCX,EAAiC,uDAAzBE,EAAcG,EAAW,uCACrD,OAAQA,EAAOC,MACX,KAAKqE,EACD,IAAIc,EAAU,CACVrB,GAAI,EACJS,KAAMxE,EAAO6E,YACbJ,WAAY,GAEhB,OAAO,eACA9E,EADP,CAEI4E,UAAU,GAAD,mBAAM5E,EAAM4E,WAAZ,CAAuBa,MAIxC,IA3BiB,2BA4Bb,OAAO,eACAzF,EADP,CAEI+E,QAAS1E,EAAO0E,UAGxB,IAhCW,qBAiCP,OAAO,eACA/E,EADP,CAEIgF,OAAQ3E,EAAO2E,SAGvB,IArCY,sBAsCR,OAAO,eACAhF,EADP,CAEI4E,UAAW5E,EAAM4E,UAAUc,QAAO,SAAAC,GAAC,OAAIA,EAAEvB,KAAO/D,EAAOuF,YAG/D,QACI,OAAO5F,K,gCCjDnB,qCASe4B,IANC,SAAChD,GACb,OAAO,6BACH,yBAAKO,IAAK0G,IAAWzG,IAAI,qB,+BCLjC,kHAIM0G,EAAWC,SAAa,CAC1BC,iBAAiB,EACjBC,QAJY,gDAKZC,QAAS,CACL,UAAU,0CAILC,EAAW,CACpBC,SADoB,WACkB,IAA7BC,EAA4B,uDAAhB,EAAGC,EAAa,uDAAJ,EAC7B,OAAOR,EAASS,IAAT,qBAA2BF,EAA3B,kBAAgDC,KAE3DE,OAJoB,SAIZ7C,GACJ,OAAOmC,EAASW,KAAT,iBAAwB9C,KAEnC+C,SAPoB,SAOV/C,GACN,OAAOmC,EAASa,OAAT,iBAA0BhD,MAI5B0B,EAAa,CACtBC,WADsB,SACV3B,GACR,OAAOmC,EAASS,IAAT,kBAAwB5C,KAEnC4B,UAJsB,SAIX5B,GACP,OAAOmC,EAASS,IAAT,yBAA+B5C,KAE1C6B,aAPsB,SAOTR,GACT,OAAOc,EAASc,IAAT,iBAA+B,CAAC5B,aAGlChB,EAAU,CACnBC,OADmB,WAEf,OAAO6B,EAASS,IAAT,YAEXhH,MAJmB,SAIZqE,EAAOS,GAA6B,IAAnBC,EAAkB,wDACtC,OAAOwB,EAASW,KAAT,aAA4B,CAAC7C,QAAOS,WAAUC,gBAEzD7E,OAPmB,WAQf,OAAOqG,EAASa,OAAT,iB,qFCzCXzG,EAAe,CACf2G,YAAa,CACT,CAACzC,GAAI,EAAG0C,KAAM,aACd,CAAC1C,GAAI,EAAG0C,KAAM,MACd,CAAC1C,GAAI,EAAG0C,KAAM,QACd,CAAC1C,GAAI,EAAG0C,KAAM,QACd,CAAC1C,GAAI,EAAG0C,KAAM,aAElBC,aAAc,CACV,CAAC3C,GAAI,EAAG4C,OAAQ,EAAGnC,KAAM,gBACzB,CAACT,GAAI,EAAG4C,OAAQ,EAAGnC,KAAM,SACzB,CAACT,GAAI,EAAG4C,OAAQ,EAAGnC,KAAM,WACzB,CAACT,GAAI,EAAG4C,OAAQ,EAAGnC,KAAM,WACzB,CAACT,GAAI,EAAG4C,OAAQ,EAAGnC,KAAM,iBAqBpBoC,EAAqB,SAACC,GAAD,MAAqB,CACnD5G,KArCiB,wBAsCjB4G,mBAGWrG,IAtBQ,WAAmC,IAAlCb,EAAiC,uDAAzBE,EAAcG,EAAW,uCACrD,OAAQA,EAAOC,MACX,IArBa,wBAsBT,IAAIoD,EAAU,CACVU,GAAI,EACJ4C,OAAQ,EACRnC,KAAMxE,EAAO6G,gBAEjB,OAAO,eACAlH,EADP,CAEI+G,aAAa,GAAD,mBAAM/G,EAAM+G,cAAZ,CAA0BrD,MAE9C,QACI,OAAO1D,K,4PC9BNmH,EAAuB,SAACC,EAAOC,EAAQC,EAAaC,GAC7D,OAAOH,EAAMI,KAAI,SAAAC,GACb,OAAIA,EAAEH,KAAiBD,EACZ,eAAII,EAAX,GAAiBF,GAEdE,MCJTC,EAAS,eAQXxH,EAAe,CACfyH,UAAW,GACXrB,SAAU,EACVsB,gBAAiB,EACjBvB,YAAa,EACbwB,YAAY,EACZC,sBAAuB,GACvBC,YAAa,IAgEJC,EAAgB,SAACrE,GAAD,MAAa,CACtCrD,KAAMoH,EACN/D,WAESsE,EAAkB,SAACtE,GAAD,MAAa,CACxCrD,KAnFa,iBAoFbqD,WAMSuE,EAAiB,SAAC7B,GAAD,MAAkB,CAC5C/F,KAzFqB,yBA0FrB+F,gBAMS8B,EAAmB,SAACN,GAAD,MAAiB,CAC7CvH,KA/FuB,2BAgGvBuH,eAESO,EAA8B,SAACN,EAAuBnE,GAAxB,MAAoC,CAC3ErD,KAlGoC,wCAmGpCwH,wBACAnE,WAGSyC,EAAW,SAACC,EAAaC,GAAd,8CAA2B,WAAO9D,GAAP,eAAAuB,EAAA,6DAC/CvB,EAAS0F,EAAe7B,IACxB7D,EAAS2F,GAAiB,IAFqB,SAG1BhC,IAASC,SAASC,EAAaC,GAHL,OAG3CpC,EAH2C,OAI/C1B,EAAS2F,GAAiB,IAC1B3F,EA3BoC,CACpClC,KAtFc,kBAuFdqH,UAyBkBzD,EAASJ,KAAKsD,QAChC5E,EApBoD,CACpDlC,KA5F0B,8BA6F1BsH,gBAkB4B1D,EAASJ,KAAKuE,aANK,2CAA3B,uDASlBC,EAAkB,uCAAG,WAAO9F,EAAUmB,EAAQ4E,EAAWC,GAApC,SAAAzE,EAAA,6DACvBvB,EAAS4F,GAA4B,EAAKzE,IADnB,SAEF4E,EAAU5E,GAFR,OAGU,IAHV,OAGVG,KAAKK,YACd3B,EAASgG,EAAc7E,IAE3BnB,EAAS4F,GAA4B,EAAMzE,IANpB,2CAAH,4DASX6C,EAAS,SAAC7C,GAAD,8CAAY,WAAOnB,GAAP,SAAAuB,EAAA,sDAC9BuE,EACI9F,EACAmB,EACAwC,IAASK,OAAOiC,KAAKtC,KACrB6B,GAL0B,2CAAZ,uDAQTtB,EAAW,SAAC/C,GAAD,8CAAY,WAAOnB,GAAP,SAAAuB,EAAA,sDAChCuE,EACI9F,EACAmB,EACAwC,IAASO,SAAS+B,KAAKtC,KACvB8B,GAL4B,2CAAZ,uDAQTjH,IA7HM,WAAmC,IAAlChB,EAAiC,uDAAzBE,EAAcG,EAAW,uCACnD,OAAQA,EAAOC,MACX,KAAKoH,EACD,OAAO,eACA1H,EADP,CAEI2H,UAAWR,EACPnH,EAAM2H,UACNtH,EAAOsD,OACP,KACA,CAAC+E,UAAS,MAItB,IA9BS,iBA+BL,OAAO,eACA1I,EADP,CAEI2H,UAAWR,EACPnH,EAAM2H,UACNtH,EAAOsD,OACP,KACA,CAAC+E,UAAS,MAItB,IAxCU,kBAyCN,OAAO,eACA1I,EADP,CAEI2H,UAAWtH,EAAOsH,YAG1B,IA7CiB,yBA8Cb,OAAO,eACA3H,EADP,CAEIqG,YAAahG,EAAOgG,cAG5B,IAlDsB,8BAmDlB,OAAO,eACArG,EADP,CAEI4H,gBAAiBvH,EAAOuH,kBAGhC,IAvDmB,2BAwDf,OAAO,eACA5H,EADP,CAEI6H,WAAYxH,EAAOwH,aAG3B,IA5DgC,wCA6D5B,OAAO,eACA7H,EADP,CAEI8H,sBAAuBzH,EAAOyH,sBAAP,sBACb9H,EAAM8H,uBADO,CACgBzH,EAAOsD,SACxC3D,EAAM8H,sBAAsBpC,QAAO,SAAAtB,GAAE,OAAIA,IAAO/D,EAAOsD,YAGrE,QACI,OAAO3D,K,mBC7EnBnC,EAAOC,QAAU,CAAC,QAAU,yB,mBCA5BD,EAAOC,QAAU,CAAC,QAAU,4B,mBCA5BD,EAAOC,QAAU,CAAC,QAAU,wB,mBCA5BD,EAAOC,QAAU,CAAC,QAAU,6B,mBCD5BD,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.7b22d09d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__fmJkU\",\"active_link\":\"Nav_active_link__1XDvz\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport classes from './Nav.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav className={ classes.nav }>\r\n            <div>\r\n                <NavLink to='/news' activeClassName={ classes.active_link }>News</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to=\"/profile\" activeClassName={ classes.active_link }>Profile</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to='/users' activeClassName={ classes.active_link }>Users</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to=\"/dialogs\" activeClassName={ classes.active_link }>Dialogs</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to='/music' activeClassName={ classes.active_link }>Music</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to='/bookmarks' activeClassName={ classes.active_link }>Bookmarks</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to='/settings' activeClassName={ classes.active_link }>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React from \"react\";\r\nimport classes from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div className={ classes.dialogs }>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\nimport classes from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div className={ classes.dialogs }>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport classes from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div className={ classes.dialogs }>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\nimport classes from './Bookmarks.module.css';\r\n\r\nconst Bookmarks = (props) => {\r\n    return (\r\n        <div className={ classes.dialogs }>\r\n            Bookmarks\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Bookmarks;","import React from \"react\";\r\nimport classes from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={ classes.header }>\r\n            <img src=\"https://pngimg.com/uploads/pokemon/pokemon_PNG73.png\" alt=\"логотип\"/>\r\n            <div className={classes.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div><p>{props.login} - <button onClick={props.logout}>logout</button></p></div>\r\n                    :<NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {logout})\r\n)(HeaderContainer);","\r\nimport {authUser} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS';\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS,\r\n})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(authUser());\r\n\r\n    Promise.all([promise]).then(()=>{\r\n        dispatch(initializedSuccess())\r\n    })\r\n}\r\n\r\n\r\nexport default appReducer;","let initialState = {\r\n\r\n}\r\n\r\nconst SidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default SidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport ProfileReducer from \"./Profile-reducer\";\r\nimport DialogsReducer from \"./Dialogs-reducer\";\r\nimport SidebarReducer from \"./Sidebar-reducer\";\r\nimport UsersReducer from \"./Users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunk from \"redux-thunk\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    ProfilePage: ProfileReducer,\r\n    DialogsPage: DialogsReducer,\r\n    sidebar: SidebarReducer,\r\n    UsersPage: UsersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk));\r\nwindow.store = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader />}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport Nav from \"./components/Nav/Nav\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport News from \"./components/News/News\";\nimport Bookmarks from \"./components/Bookmarks/Bookmarks\";\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/Profile-container\"));\nconst UsersContainer = React.lazy(() => import(\"./components/Users/Users-container\"));\nconst Login = React.lazy(() => import(\"./components/Login/Login\"));\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n    render() {\n        /*if (!this.props.initialized) {\n            return <Preloader />\n        }*/\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Nav/>\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\n                    <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\n                    <Route path='/users' render={withSuspense(UsersContainer)} />\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                    <Route path='/bookmarks' render={() => <Bookmarks/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/login' render={withSuspense(Login)}/>\n                </div>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\n\nlet MainApp = (props) => {\n    return (\n        <HashRouter>\n            <Provider store={store}>\n                <AppContainer />\n            </Provider>\n        </HashRouter>\n    )\n}\nexport default MainApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport MainApp from \"./App\";\n\n\nReactDOM.render(<MainApp />, document.getElementById('root'));\n\nserviceWorker.unregister();","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    data: {userId, email, login, isAuth},\r\n})\r\n\r\nexport const authUser = () => async (dispatch) => {\r\n    let response = await authAPI.authMe();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(authUser());\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0]:'Some error'\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__18DUm\",\"loginBlock\":\"Header_loginBlock__aUdtO\"};","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\r\nconst SET_STATUS = 'profile/SET_STATUS';\r\nconst DELETE_POST = 'profile/DELETE_POST';\r\n\r\nlet initialState = {\r\n    PostsData: [\r\n        {id: 1, text: 'hello', likesCount: 4},\r\n        {id: 2, text: 'lol kek cheburek', likesCount: 51},\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n}\r\n\r\nconst ProfileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let NewPost = {\r\n                id: 3,\r\n                text: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                PostsData: [...state.PostsData, NewPost],\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                PostsData: state.PostsData.filter(p => p.id !== action.postId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({\r\n    type: ADD_POST,\r\n    newPostText,\r\n})\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile,\r\n})\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS,\r\n    status,\r\n})\r\nexport const deletePost = (postId) => ({\r\n    type: DELETE_POST,\r\n    postId,\r\n})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data));\r\n\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\nexport const updateStatus = (status) =>  async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0 ) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport default ProfileReducer;","import React from \"react\";\r\nimport preloader from \"../../../assets/img/Spinner.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img src={preloader} alt='...loading...' />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import * as axios from 'axios';\r\n\r\nconst baseURL = 'https://social-network.samuraijs.com/api/1.0/'\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL,\r\n    headers: {\r\n        \"API-KEY\":'48d27174-95eb-4258-826a-c0656d2c3fa8'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage=1, pageSize=5)  {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n    follow (userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow (userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile (userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus (userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status})\r\n    },\r\n}\r\nexport const authAPI = {\r\n    authMe () {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login (email, password, rememberMe=false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout () {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n","const SEND_MESSAGE = 'dialogs/SEND-MESSSAGE';\r\n\r\nlet initialState = {\r\n    DialogsData: [\r\n        {id: 1, name: 'Amidomaru'},\r\n        {id: 2, name: 'Yo'},\r\n        {id: 3, name: 'Riko'},\r\n        {id: 4, name: 'Moon'},\r\n        {id: 5, name: 'Ogurchik'},\r\n    ],\r\n    MessagesData: [\r\n        {id: 1, chatId: 1, text: 'Ya Amidomaru'},\r\n        {id: 1, chatId: 2, text: 'Yo Yo'},\r\n        {id: 1, chatId: 3, text: 'Ya Riko'},\r\n        {id: 1, chatId: 4, text: 'Ya Moon'},\r\n        {id: 1, chatId: 5, text: 'Ya Ogurchik'},\r\n    ],\r\n}\r\n\r\nconst DialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let message = {\r\n                id: 2,\r\n                chatId: 1,\r\n                text: action.newMessageText,\r\n            };\r\n            return {\r\n                ...state,\r\n                MessagesData: [...state.MessagesData, message],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageText) => ({\r\n    type: SEND_MESSAGE,\r\n    newMessageText,\r\n})\r\n\r\nexport default DialogsReducer;","\r\n\r\nexport const updateObjectsInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectsInArray} from \"../utils/object-helper\";\r\n\r\nconst FOLLOW = 'users/FOLLOW';\r\nconst UNFOLLOW = 'users/UNFOLLOW';\r\nconst SET_USERS = 'users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'users/TOGGLE_IS_FOLLOWING_IN_PROGRESS';\r\n\r\nlet initialState = {\r\n    UsersData: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    isFollowingInProgress: [],\r\n    portionSize: 10,\r\n}\r\n\r\nconst UsersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                UsersData: updateObjectsInArray(\r\n                    state.UsersData,\r\n                    action.userId,\r\n                    'id',\r\n                    {followed:true}\r\n                    )\r\n            };\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                UsersData: updateObjectsInArray(\r\n                    state.UsersData,\r\n                    action.userId,\r\n                    'id',\r\n                    {followed:false}\r\n                )\r\n            };\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                UsersData: action.UsersData,\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage,\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount,\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                isFollowingInProgress: action.isFollowingInProgress\r\n                    ? [...state.isFollowingInProgress, action.userId]\r\n                    : state.isFollowingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({\r\n    type: FOLLOW,\r\n    userId,\r\n})\r\nexport const unfollowSuccess = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId,\r\n})\r\nexport const setUsers = (UsersData) => ({\r\n    type: SET_USERS,\r\n    UsersData,\r\n})\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage,\r\n})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount,\r\n})\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching,\r\n})\r\nexport const toggleIsFollowingInProgress = (isFollowingInProgress, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_IN_PROGRESS,\r\n    isFollowingInProgress,\r\n    userId,\r\n})\r\n\r\nexport const getUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(setCurrentPage(currentPage));\r\n    dispatch(toggleIsFetching(true));\r\n    let response = await usersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(response.data.items));\r\n    dispatch(setTotalUsersCount(response.data.totalCount));\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleIsFollowingInProgress(true,userId));\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleIsFollowingInProgress(false,userId));\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(\r\n        dispatch,\r\n        userId,\r\n        usersAPI.follow.bind(usersAPI),\r\n        followSuccess\r\n    )\r\n}\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(\r\n        dispatch,\r\n        userId,\r\n        usersAPI.unfollow.bind(usersAPI),\r\n        unfollowSuccess\r\n    )\r\n}\r\nexport default UsersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Music_dialogs__XE_Y6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Settings_dialogs__2m43o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"News_dialogs__2xL_J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Bookmarks_dialogs__2xFqF\"};","module.exports = __webpack_public_path__ + \"static/media/Spinner.fb0de157.svg\";"],"sourceRoot":""}